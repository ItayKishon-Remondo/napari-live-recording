# This workflows will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: deploy

on: 
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: windows-latest
    timeout-minutes: 8
    steps:
    
    if: ${{ github.ref == "refs/heads/main" }}
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: "3.x"

    - name: Check new plugin version
      uses: thebongy/version-check@v1
      with:
        file: setup.cfg
        tagFormat: version = ${version}
      id: new_version

    - name: Check current plugin version
      run: 
        curr_version=python -m pip show napari-live-recording | findstr "Version:" >> $GITHUB_ENV

    if: "!contains($curr_version, $new_version)"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -U setuptools setuptools_scm wheel twine

      - name: Build and publish
        env:
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
        run: |
          python -m pip install --user --upgrade setuptools wheel
          python setup.py sdist bdist_wheel
          python -m pip install --user --upgrade twine
          python -m twine upload --repository pypi dist/* --verbose
    
      - name: The job has succeeded
        if: ${{ success() }}
        run: echo Build successfully executed.
      - name: The job has failed
        if: ${{ failure() }}
        run: echo Build failed.